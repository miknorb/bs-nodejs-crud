swagger: "2.0"
info:
  title: BlackSwan-CRUD test API
  version: 1.0.0
schemes:
  - http
host: localhost:8080
basePath: "/api"
paths:
  /users:
    get:
      summary: Returns a list of users.
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResponse'
              properties:
                _id:
                  type: string
            description: The found user object array in the database
    post:
      summary: Creates a new user
      parameters:
        - name: User
          description: User to be created
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRequest"
      produces:
        - application/json
      responses:
        200:
          description: OK, User has been created
          schema:
            $ref: "#/definitions/UserResponse"
            properties:
              _id:
                type: string
            description: The created user object
        409:
          description: User with that username already exists
        422:
          description: Parameters required to create a new user are missing.
  /users/{userid}:
    parameters:
      - name: userid
        in: path
        description: ID of the user
        required: true
        type: string
    get:
      summary: Get user's info by userId
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserResponse"
            properties:
              _id:
                type: string
            description: The user object with the given ID
        404:
          description: User not found with the given ID
    put:
      summary: Update existing user info
      parameters:
        - name: User
          in: body
          description: Properties to update on the User
          required: true
          schema:
            $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
            properties:
              _id:
                type: string
            description: The updated user object
        404:
          description: User not found with the given ID
  /users/{userid}/tasks:
    parameters:
      - name: userid
        description: ID of the user
        in: path
        type: string
        required: true
    post:
      summary: Creates a new task
      parameters:
        - name: Task
          in: body
          schema:
            $ref: '#/definitions/TaskRequest'
          required: true
      responses:
        200:
          description: OK - Task created
          schema:
            $ref: '#/definitions/TaskResponse'
            properties:
              _id:
                type: string
            description: The created task object
        404:
          description: User not found with the given ID
        422:
          description: Required properties are missing or invalid in the body.
    get:
      summary: Get all task for the user with the given ID
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskResponse'
              properties:
                _id:
                  type: string
              description: The tasks for the user
  /users/{userid}/tasks/{taskid}:
    parameters:
      - name: userid
        in: path
        description: ID of the user
        required: true
        type: string
      - name: taskid
        in: path
        description: ID of the task
        required: true
        type: string
    get:
      description: Returns the task of the user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskResponse'
            properties:
              _id:
                type: string
        404:
          description: User or task not found
    put:
      description: Updates the task for the user
      parameters:
        - name: Task
          in: body
          required: true
          schema:
            $ref: '#/definitions/TaskRequest'
      responses:
        200:
          description: OK
          schema:
            properties:
              _id:
                type: string
            $ref: '#/definitions/TaskResponse'
            description: The updated task object
        404:
          description: User or task not found
        422:
          description: Invalid update value

    delete:
      summary: Deletes the task from the user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TaskResponse'
            properties:
              _id:
                type: string
            description: The deleted task
        404:
          description: Task not found
definitions:
  UserRequest:
    type: object
    properties:
      username:
        type: string
      first_name:
        type: string
      last_name:
        type: string
  UserResponse:
    type: object
    allOf:
      - $ref: '#/definitions/UserRequest'
    properties:
      _id:
        type: string
      tasks:
        type: array
        items:
          $ref: '#/definitions/TaskResponse'
  TaskRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      date_time:
        type: string
        format: 'date-time'
      status:
        type: string
    required:
      - name
      - description
      - date_time
  TaskResponse:
    type: object
    allOf:
      - $ref: '#/definitions/TaskRequest'
    properties:
      _id:
        type: string